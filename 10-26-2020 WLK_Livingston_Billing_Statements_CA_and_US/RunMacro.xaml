<Activity mc:Ignorable="sap sap2010" x:Class="USRunMacro" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_TransactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_WeeklySummFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_WeeklySummFolderName" Type="InArgument(x:String)" />
    <x:Property Name="in_ExcelAttachmentPath" Type="InArgument(x:String)" />
    <x:Property Name="in_TodaysDate" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_MacroName" Type="InArgument(x:String)" />
    <x:Property Name="in_MacroFileName" Type="InArgument(x:String)" />
    <x:Property Name="in_MacroFnName" Type="InArgument(x:String)" />
    <x:Property Name="out_NewFilePath" Type="OutArgument(x:String)" />
    <x:Property Name="in_RenameMacroFNName" Type="InArgument(x:String)" />
    <x:Property Name="in_CAMacroSheetname" Type="InArgument(x:String)" />
    <x:Property Name="in_TimeStamp" Type="InArgument(x:String)" />
    <x:Property Name="in_CAStaticAccountNo" Type="InArgument(x:String)" />
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
  </x:Members>
  <this:USRunMacro.in_TodaysDate>
    <InArgument x:TypeArguments="x:String" />
  </this:USRunMacro.in_TodaysDate>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>654,743</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="RunMacro" sap:VirtualizedContainerService.HintSize="614,663" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="TemplateFileName" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="USMacroTemplateWb" />
      <Variable x:TypeArguments="x:String" Name="UpdatedTemplatePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="ExcelAttachDT" />
      <Variable x:TypeArguments="x:Boolean" Name="MacroWindowExists" />
      <Variable x:TypeArguments="x:Boolean" Name="UpdatedTemplatePathExists" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,104.5</av:PointCollection>
        <x:Double x:Key="Height">627.02</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID4</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,224.5</av:Point>
          <av:Size x:Key="ShapeSize">200,123</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,347.5 300,376.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Reading the Excel Attachement and Copy-Paste the  Data and Launching the Macro Window" DisplayName="Read Excel attachment and copy-paste data" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:WorkbookApplication" Name="ExcelAttachmentWb" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="733,61" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[in_ExcelAttachmentPath]" />
        <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope:ExcelAttachementPath" sap:VirtualizedContainerService.HintSize="733,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" Workbook="[ExcelAttachmentWb]" WorkbookPath="[in_ExcelAttachmentPath]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Read Excel and Close Workbook" sap:VirtualizedContainerService.HintSize="358,406" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Read Excel attachment" sap:VirtualizedContainerService.HintSize="336,183" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExcelReadRange AddHeaders="False" DataTable="[ExcelAttachDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="[Nothing]" SheetName="[in_Config(&quot;ExcelAttachmentSheetName&quot;).ToString]" />
                </Sequence>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="336,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" Workbook="[ExcelAttachmentWb]" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
        <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="733,1214" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" WorkbookPath="[UpdatedTemplatePath]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Read Excel attachment" sap:VirtualizedContainerService.HintSize="719,1105" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[io_TransactionItem(0).ToString.Equals(in_CAStaticAccountNo)]" sap:VirtualizedContainerService.HintSize="697,660" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence DisplayName="Entering the Data in RawData Sheet" sap:VirtualizedContainerService.HintSize="336,513" sap2010:WorkflowViewState.IdRef="Sequence_59">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="314,61" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[in_CAMacroSheetname]" />
                      <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[in_CAMacroSheetname]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_Config("CASheetRawData").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="314,61" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[in_CAMacroSheetname]" />
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[ExcelAttachDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[in_CAMacroSheetname]" StartingCell="[Nothing]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Entering the Data in CAMacroSheetName" sap:VirtualizedContainerService.HintSize="336,413" sap2010:WorkflowViewState.IdRef="Sequence_60">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="314,61" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[in_CAMacroSheetname]" />
                      <ui:ExcelWriteRange AddHeaders="False" DataTable="[ExcelAttachDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[in_CAMacroSheetname]" StartingCell="[Nothing]" />
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="314,61" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="[in_CAMacroSheetname]" />
                    </Sequence>
                  </If.Else>
                </If>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="697,51" sap2010:WorkflowViewState.IdRef="CommentOut_33">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="436,175" sap2010:WorkflowViewState.IdRef="Sequence_69">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE Macro'" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="ce6c379b76cb14e50afc84ab507d48a4" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xlsm - Excel' /&gt;">
                        <ui:WindowScope.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="358,548" sap2010:WorkflowViewState.IdRef="Sequence_21">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Run Macro" sap:VirtualizedContainerService.HintSize="336,424" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayMS="10" DisplayName="Send Hotkey 'EXCEL7'" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,154" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="f8" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                                  <ui:SendHotkey.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="3879bfa66839a549810e5d2a0f9a6f47" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*.xlsm - Excel' /&gt;&lt;wnd cls='EXCEL7' title='*.xlsm' /&gt;" WaitForReady="COMPLETE" />
                                  </ui:SendHotkey.Target>
                                </ui:SendHotkey>
                                <ui:UiElementExists DisplayName="Element Exists 'dialog  Macro'" Exists="[MacroWindowExists]" sap:VirtualizedContainerService.HintSize="314,106" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                                  <ui:UiElementExists.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="35ff8b91b60cd9512eb45f768eeb8bf4" Selector="&lt;wnd app='*excel.exe' title='Macro' /&gt;&lt;ctrl name='Macro' role='dialog' text='Macro' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
                                  </ui:UiElementExists.Target>
                                </ui:UiElementExists>
                              </Sequence>
                            </Sequence>
                          </ActivityAction>
                        </ui:WindowScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WindowScope>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <ui:PathExists DisplayName="Path Exists" Exists="[UpdatedTemplatePathExists]" sap:VirtualizedContainerService.HintSize="697,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[UpdatedTemplatePath]" PathType="File" />
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="697,61" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="[UpdatedTemplatePathExists.ToString]" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </Sequence>
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Checking if the Updated Template path Exists" Condition="[UpdatedTemplatePathExists]" DisplayName="Macro window launched?" sap:VirtualizedContainerService.HintSize="142,144" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">229,376.5</av:Point>
              <av:Size x:Key="ShapeSize">142,144</av:Size>
              <av:PointCollection x:Key="TrueConnector">229,448.5 150,448.5 150,534.02</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">371,448.5 480,448.5 480,534.02</av:PointCollection>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">50,534.02</av:Point>
                  <av:Size x:Key="ShapeSize">200,93</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="Running the Macro if the Template Path Exists" DisplayName="Run Macro" sap:VirtualizedContainerService.HintSize="741,2360" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <Sequence.Variables>
                  <Variable x:TypeArguments="s:String[]" Name="AppDelayTime" />
                  <Variable x:TypeArguments="x:TimeSpan" Name="DelayTime" />
                  <Variable x:TypeArguments="x:Boolean" Name="RunMacroRenameFileExists" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log RunMacro Launched" sap:VirtualizedContainerService.HintSize="719,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[in_Config(&quot;LogMessage_RunMacroLaunched&quot;).ToString+&quot; &quot;+in_TimeStamp]" />
                <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope:RunMacro UpdatedTemplatePath" sap:VirtualizedContainerService.HintSize="719,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Workbook="[USMacroTemplateWb]" WorkbookPath="[UpdatedTemplatePath]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Run Macro" sap:VirtualizedContainerService.HintSize="336,245" sap2010:WorkflowViewState.IdRef="Sequence_71">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="[in_MacroName]" />
                        <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="719,59" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[USMacroTemplateWb]" />
                <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="719,22" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="EXCEL" />
                <Sequence DisplayName="Rename Sheet with CurrentDate" sap:VirtualizedContainerService.HintSize="719,276" sap2010:WorkflowViewState.IdRef="Sequence_33">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="210,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;in_TodaysDate&quot;+in_TodaysDate]" />
                  <If Condition="[io_TransactionItem(0).ToString.Equals(in_CAStaticAccountNo)]" sap:VirtualizedContainerService.HintSize="210,51" sap2010:WorkflowViewState.IdRef="If_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Replace Raw Data Sheet with CurrentDate" sap:VirtualizedContainerService.HintSize="336,211" sap2010:WorkflowViewState.IdRef="Sequence_56">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke RenameExcelSheet workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="RenameExcelSheet.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">[in_Config("CASheetRawData").ToString]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[UpdatedTemplatePath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_NewSheetName">[in_TodaysDate.Replace("-","")]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_RenameMacroFNName">[in_RenameMacroFNName]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Replace Summbillinv Sheet with Current Date" sap:VirtualizedContainerService.HintSize="336,211" sap2010:WorkflowViewState.IdRef="Sequence_57">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke RenameExcelSheet workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="RenameExcelSheet.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SheetName">[in_CAMacroSheetname]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[UpdatedTemplatePath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_NewSheetName">[in_TodaysDate.Replace("-","")]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_RenameMacroFNName">[in_RenameMacroFNName]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
                <ui:LogMessage DisplayName="Log SheetRenaming" sap:VirtualizedContainerService.HintSize="719,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[in_Config(&quot;LogMessage_SheetRename&quot;).ToString+&quot; &quot;+in_TimeStamp]" />
                <Assign sap:VirtualizedContainerService.HintSize="719,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[out_NewFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_WeeklySummFolderPath+"\"+in_WeeklySummFolderName+".xlsm"]</InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="719,61" sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="[out_NewFilePath]" />
                <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="719,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                <ui:PathExists DisplayName="Path Exists" Exists="[RunMacroRenameFileExists]" sap:VirtualizedContainerService.HintSize="719,89" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[out_NewFilePath]" PathType="File" />
                <If Condition="[RunMacroRenameFileExists]" sap:VirtualizedContainerService.HintSize="719,663" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Sequence DisplayName="Delete the Already Present Rename File of RunMacro" sap:VirtualizedContainerService.HintSize="222,237" sap2010:WorkflowViewState.IdRef="Sequence_72">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:Delete ContinueOnError="{x:Null}" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[out_NewFilePath]" />
                      <TryCatch DisplayName="Try Catch:InvokeCode Rename MacroTemplate" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="FileSystem.Rename(in_OldFilePath,in_NewFilePath)" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_OldFilePath">[UpdatedTemplatePath]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_NewFilePath">[out_NewFilePath]</InArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Failed at Renaming since same file Exists&quot;]" />
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Rename the MacroTemplate" sap:VirtualizedContainerService.HintSize="440,515" sap2010:WorkflowViewState.IdRef="Sequence_73">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch DisplayName="Try Catch:InvokeCode Rename MacroTemplate" sap:VirtualizedContainerService.HintSize="418,391" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="FileSystem.Rename(in_OldFilePath,in_NewFilePath)" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_OldFilePath">[UpdatedTemplatePath]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_NewFilePath">[out_NewFilePath]</InArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Failed at Renaming since same file Exists&quot;]" />
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </If.Else>
                </If>
                <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="719,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                <ui:LogMessage DisplayName="Log ExcelFile Renaming" sap:VirtualizedContainerService.HintSize="719,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[in_Config(&quot;LogMessage_ExcelSheetRename&quot;).ToString+&quot; &quot;+in_TimeStamp]" />
                <ui:LogMessage DisplayName="Log Invoke Code" sap:VirtualizedContainerService.HintSize="719,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[in_Config(&quot;LogMessage_InvokeCode&quot;).ToString+&quot; &quot;+in_TimeStamp]" />
              </Sequence>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">380,534.02</av:Point>
                  <av:Size x:Key="ShapeSize">200,93</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence sap2010:Annotation.AnnotationText="Defining a Log Message if template path not found" DisplayName="Log RunMacro NotLaunched" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="Sequence_30">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log RunMacro NotLaunched" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[in_Config(&quot;LogMessage_UpdatedTemplatePathNotFound&quot;).ToString+&quot; &quot;+in_TimeStamp]" />
              </Sequence>
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <FlowStep x:Name="__ReferenceID4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,104.5</av:Point>
          <av:Size x:Key="ShapeSize">200,93</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,197.5 300,224.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Navigating the Template file to a Weekly Summary Folder" DisplayName="Move Template file to Weekly Summ Folder" sap:VirtualizedContainerService.HintSize="200,93" sap2010:WorkflowViewState.IdRef="Sequence_45">
        <Sequence.Variables>
          <Variable x:TypeArguments="ui:GenericValue" Name="TemplateFilePath" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[in_CAStaticAccountNo]" />
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[&quot;in_todays date&quot;+in_TodaysDate]" />
        <Assign DisplayName="Assign:TempateFilePath" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="ui:GenericValue">[TemplateFilePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="ui:GenericValue">[io_TransactionItem(5).ToString]</InArgument>
          </Assign.Value>
        </Assign>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[TemplateFilePath]" />
        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[TemplateFileName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[path.GetFileName(TemplateFilePath)]</InArgument>
          </Assign.Value>
        </Assign>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[TemplateFileName]" />
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[in_WeeklySummFolderPath]" />
        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[in_WeeklySummFolderPath+&quot;\&quot;+TemplateFileName]" DisplayName="Copy Template File to Weekly Summ Folder" sap:VirtualizedContainerService.HintSize="242,22" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[TemplateFilePath]" />
        <Assign DisplayName="Assign updated Template path" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[UpdatedTemplatePath]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_WeeklySummFolderPath+"\"+TemplateFileName]</InArgument>
          </Assign.Value>
        </Assign>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[UpdatedTemplatePath]" />
        <Sequence DisplayName="Clear the macro template sheet" sap:VirtualizedContainerService.HintSize="242,51" sap2010:WorkflowViewState.IdRef="Sequence_44">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[io_TransactionItem(0).ToString.Equals(in_CAStaticAccountNo)]" sap:VirtualizedContainerService.HintSize="697,359" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="Clear Sheet if the SheetName is RawData" sap:VirtualizedContainerService.HintSize="336,211" sap2010:WorkflowViewState.IdRef="Sequence_54">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ClearSheet workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Script\ClearSheet.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_UpdatedTemplatePath">[UpdatedTemplatePath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_MacroFileName">[in_MacroFileName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_MacroFnName">[in_MacroFnName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_CAMacroSheetname">[in_Config("CASheetRawData").ToString]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Clear Sheet if the SheetName is Other than Raw Data" sap:VirtualizedContainerService.HintSize="336,211" sap2010:WorkflowViewState.IdRef="Sequence_55">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ClearSheet workflow" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Script\ClearSheet.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_UpdatedTemplatePath">[UpdatedTemplatePath]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_MacroFileName">[in_MacroFileName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_MacroFnName">[in_MacroFnName]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_CAMacroSheetname">[in_CAMacroSheetname]</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID3</x:Reference>
      </FlowStep.Next>
    </FlowStep>
  </Flowchart>
</Activity>